- name: ---- create directory in /home/reza ----
  file:
    path: /home/reza/testdir1
    state: directory
    owner: reza
    group: reza
    mode: 0755
  tags: [create_dir]

- name: ---- create file in /home/reza/testdir
  file:
    path: /home/reza/testdir1/file1
    state: touch
    owner: reza
    group: reza
    mode: 0755
  tags: [create_file]


- name: ---- show my user name ----
  debug:
    msg: "{{user.name}}"
  tags: [show_var_username]

- name: ---- show my user email ----
  debug:
    msg: "{{user.email}}"
  tags: [show_var_email]

- name: ---- show my user list ----
  debug:
    msg: "{{user_list[0]}}"
  tags: [show_user_list]


- name: ---- show my user list 2----
  debug:
    msg: "{{user_list2}}"
  tags: [show_user_list2]

- name: ---- extra vars ----
  debug:
    msg: "{{nodes}} - {{package_name}}"
  tags: [show_extra_vars]

- name: --- create var and test in tasks main yaml ----
  set_fact:
    myvar: "salam"
- name: ----show my var ----
  debug:
    msg: "{{myvar}}"
  tags: [show_my_var]

- name: ----show my os family ----
  debug:
    msg: "{{ansible_os_family}}"
  tags: [show_my_os_family]

- name: ----show my http port as group vars----
  debug:
    msg: "{{http_port}}"
  tags: [show_my_http_port]

- name: ---- command module ----
  command: cat file1
  args:
    chdir: /home/reza/testdir1
  register: catty
  tags: [show_command_module]

- name: ---- show result of command module ---
  debug:
    msg: "{{catty.stdout}}"
  tags: [show_command_module]


- name: ---- command module Execise for df -h ----
  command: df -h
  register: df
  tags: [show_command_module_ex8_df]

- name: ---- show result of command module for df -h Exercise---
  debug:
    msg: "{{df.stdout}}"
  tags: [show_command_module_ex8_df]

# - name: ---- command module Execise for ps aux ----
#   command: ps aux | grep ansible
#   register: ps
#   tags: [show_command_module_ex8_ps]

# - name: ---- show result of command module for ps aux Exercise---
#   debug:
#     msg: "{{ps.stdout}}"
#   tags: [show_command_module_ex8_ps]

- name: ---- expect command ----
  expect:
    command: passwd devops
    responses:
      password: "123"
  no_log: true
  tags: [show_expect_module]


- name: --- Script Module ---
  script: test.sh
  args:
    creates: /home/reza/testdir2
    removes: /home/reza/testdir1
  register: scp_var
  tags: [execute_script]

- name: -- show value script --
  debug:
    msg: "{{scp_var.stdout}}"
  tags: [execute_script]



- name: --- shell module for exercise ---
  shell: cat /home/reza/testdir1/file1
  register: my_var
  tags: [shell_module_exe10_1]

- name: --- printout the result ---
  debug:
    msg: "{{my_var.stdout}}"
  tags: [shell_module_exe10_1]


- name: --- shell module for exercise ---
  shell: cat < /home/reza/testdir1/file1
  register: my_var
  tags: [shell_module_exe10_2]

- name: --- printout the result ---
  debug:
    msg: "{{my_var.stdout}}"
  tags: [shell_module_exe10_2]


- name: --- shell module for exercise ---
  shell: df -h
  register: my_var
  tags: [shell_module_exe10_3]

- name: --- printout the result ---
  debug:
    msg: "{{my_var.stdout}}"
  tags: [shell_module_exe10_3]


- name: --- shell module for exercise ---
  shell: ps aux | grep ansible
  register: my_var
  tags: [shell_module_exe10_4]

- name: --- printout the result ---
  debug:
    msg: "{{my_var.stdout}}"
  tags: [shell_module_exe10_4]


- name: --- shell module for exercise ---
  shell: curl -v anisa.co.ir
  register: my_var
  tags: [shell_module_exe10_5]

- name: --- printout the result ---
  debug:
    msg: "{{my_var.stdout}}"
  tags: [shell_module_exe10_5]




- name: --- copy module ---
  copy:
    src: file1
    dest: /home/reza/testdir1
    owner: reza
    group: reza
    mode: 0644
    backup: yes
    force: yes
  tags: [copy_module]



- name: --- copy module in remote machines ---
  copy:
    src: /home/reza/testdir1/file1
    dest: /home/reza
    owner: reza
    group: reza
    mode: 0644
    backup: yes
    remote_src: yes
    # force: yes
  tags: [copy_module_remote]



- name: --- fetch module ---
  fetch:
    src: /home/reza/testdir1/file1
    dest: /home/reza
  tags: [fetch_module]


- name: --- fetch module flat ---
  fetch:
    src: /home/reza/testdir1/file1
    dest: /home/reza/
    flat: yes
  tags: [fetch_module_flat]

- name: --- fetch module checksum ---
  fetch:
    src: /home/reza/testdir1/file1
    dest: /home/reza/
    flat: yes
    validate_checksum: no
  tags: [fetch_module_checksum]



- name: --- group module ---
  group:
    name: mamad
    state: present
  tags: [group_module]


- name: --- user module ---
  user:
    name: user1
    group: devops
    state: present #absent for delete
    shell: /bin/bash
    home: /tmp/reza
    password: 123
  tags: [user_module]


- name: --- yum repos module ---
  yum_repository:
    name: epel
    description: extra package
    baseurl: http://download.fedoraproject.org/pub/epel/9/Everything/x86_64/
    gpgcheck: no
    enabled: yes
    state: present
  tags: [yum_repo_module]


- name: --- yum modeule ---
  yum:
    name: nginx # '*' is for updating all pacakge if we add latest in state
    state: latest # presnt for install lates for update
    update_only: yes
    # security: yes
    exclude: kernel*
  tags: [yum_module]

- name: --- yum list --
  yum:
    list: ansible
  register: yum_out
  tags: [yum_list_module]


- name: --- yum list print out --
  debug:
    msg: "{{yum_out}}"
  tags: [yum_list_module]



- name: --- apt modeule ---
  apt:
    name: nginx # '*' is for updating all pacakge if we add latest in state
    state: latest # presnt for install lates for update
    # update_only: yes
    # security: yes
  tags: [apt_module]


- name: --- apt dpkg modeule ---
  apt:
    deb: /opt/deb.pkg
  tags: [apt_module_dpkg]


- name: --- apt remove modeule ---
  apt:
    name: [nginx,nginx-common] 
    state: absent
    purge: yes
  tags: [apt_module_remove]

- name: --- apt auto remove dependency modeule ---
  apt:
    autoremove: yes 
  tags: [apt_module_autoremove]



- name: --- template module -- 
  template:
    src: .bashrc.j2
    dest: ~/.bashrc
    backup: yes
    # force: yes
  tags: [template_module]



- name: --- lineinfile module -- 
  lineinfile:
    path: ~/.bashrc # if it doesn't exist it will append at the end of the file
    insertafter: 'alias sss=echo {{myvarinbash}} '
    line: 'alias ssss=echo {{myvarinbash}}'
  tags: [lineinfile_module]


